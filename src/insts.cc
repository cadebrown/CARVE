/* insts.cc - GENERATED - List of instructions, as a map ('carve::insts')
 *  
 * ** THIS IS A GENERATED FILE, DO NOT EDIT **
 *
 * @author: Cade Brown <cade@utk.edu>
 */

#include <carve.hh>

namespace carve {


// List of all instructions
unordered_map<string, instdesc> insts = {

    // ext: RV32I
    { "lui", { "lui", "U", 0x37, 0x0, 0x0 } },
    { "auipc", { "auipc", "U", 0x17, 0x0, 0x0 } },
    { "jal", { "jal", "J", 0x6f, 0x0, 0x0 } },
    { "jalr", { "jalr", "I", 0x67, 0x0, 0x0 } },
    { "beq", { "beq", "B", 0x63, 0x0, 0x0 } },
    { "bne", { "bne", "B", 0x63, 0x1, 0x0 } },
    { "blt", { "blt", "B", 0x63, 0x4, 0x0 } },
    { "bge", { "bge", "B", 0x63, 0x5, 0x0 } },
    { "bltu", { "bltu", "B", 0x63, 0x6, 0x0 } },
    { "bgeu", { "bgeu", "B", 0x63, 0x7, 0x0 } },
    { "lb", { "lb", "I", 0x3, 0x0, 0x0 } },
    { "lh", { "lh", "I", 0x3, 0x1, 0x0 } },
    { "lw", { "lw", "I", 0x3, 0x2, 0x0 } },
    { "lbu", { "lbu", "I", 0x3, 0x4, 0x0 } },
    { "lhu", { "lhu", "I", 0x3, 0x5, 0x0 } },
    { "sb", { "sb", "S", 0x23, 0x0, 0x0 } },
    { "sh", { "sh", "S", 0x23, 0x1, 0x0 } },
    { "sw", { "sw", "S", 0x23, 0x2, 0x0 } },
    { "addi", { "addi", "I", 0x13, 0x0, 0x0 } },
    { "slti", { "slti", "I", 0x13, 0x2, 0x0 } },
    { "sltiu", { "sltiu", "I", 0x13, 0x3, 0x0 } },
    { "xori", { "xori", "I", 0x13, 0x4, 0x0 } },
    { "ori", { "ori", "I", 0x13, 0x6, 0x0 } },
    { "andi", { "andi", "I", 0x13, 0x7, 0x0 } },
    { "slli", { "slli", "I", 0x13, 0x1, 0x0 } },
    { "srli", { "srli", "I", 0x13, 0x5, 0x0 } },
    { "srai", { "srai", "I", 0x13, 0x5, 0x0 } },
    { "add", { "add", "R", 0x33, 0x0, 0x0 } },
    { "sub", { "sub", "R", 0x33, 0x0, 0x20 } },
    { "sll", { "sll", "R", 0x33, 0x1, 0x0 } },
    { "slt", { "slt", "R", 0x33, 0x2, 0x0 } },
    { "sltu", { "sltu", "R", 0x33, 0x3, 0x0 } },
    { "xor", { "xor", "R", 0x33, 0x4, 0x0 } },
    { "srl", { "srl", "R", 0x33, 0x5, 0x0 } },
    { "sra", { "sra", "R", 0x33, 0x5, 0x20 } },
    { "or", { "or", "R", 0x33, 0x6, 0x0 } },
    { "and", { "and", "R", 0x33, 0x7, 0x0 } },
    { "ebreak", { "ebreak", "y", 0x73, 0x0, 0x0 } },
    { "ecall", { "ecall", "y", 0x73, 0x0, 0x0 } },
    { "j", { "j", "p", 0x0, 0x0, 0x0 } },
    { "nop", { "nop", "p", 0x0, 0x0, 0x0 } },
    { "li", { "li", "p", 0x0, 0x0, 0x0 } },
    { "la", { "la", "p", 0x0, 0x0, 0x0 } },
    { "mv", { "mv", "p", 0x0, 0x0, 0x0 } },
    { "not", { "not", "p", 0x0, 0x0, 0x0 } },
    { "neg", { "neg", "p", 0x0, 0x0, 0x0 } },
    { "seqz", { "seqz", "p", 0x0, 0x0, 0x0 } },
    { "snez", { "snez", "p", 0x0, 0x0, 0x0 } },
    { "sltz", { "sltz", "p", 0x0, 0x0, 0x0 } },
    { "sgtz", { "sgtz", "p", 0x0, 0x0, 0x0 } },
    // ext: RV64I
    { "addiw", { "addiw", "I", 0x1b, 0x0, 0x0 } },
    { "slliw", { "slliw", "I", 0x1b, 0x1, 0x0 } },
    { "srliw", { "srliw", "I", 0x1b, 0x5, 0x0 } },
    { "sraiw", { "sraiw", "I", 0x1b, 0x5, 0x20 } },
    { "addw", { "addw", "R", 0x3b, 0x0, 0x0 } },
    { "subw", { "subw", "R", 0x3b, 0x0, 0x20 } },
    { "sllw", { "sllw", "R", 0x3b, 0x1, 0x0 } },
    { "srlw", { "srlw", "R", 0x3b, 0x2, 0x0 } },
    { "sraw", { "sraw", "R", 0x3b, 0x5, 0x20 } },
};

}

